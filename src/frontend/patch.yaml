metadata:
  labels:
    dt.owner: "dev-team-ux"
spec:
  template: 
    metadata:
      labels:
        dt.owner: "dev-team-ux"
      annotations:
        oneagent.dynatrace.com/inject: "true"
    spec:
      containers:
        - name: frontend
          image: IMAGE_PLACEHOLDER
          imagePullPolicy: Always
          resources:
            limits:
              memory: 512Mi  # To run OneAgent we reccomend 512Mi, Original 250Mi - https://docs.dynatrace.com/docs/setup-and-configuration/dynatrace-oneagent/memory-requirements
          env:
            - name: DT_LOGLEVELCON # https://www.dynatrace.com/support/help/shortlink/agent-logging
              value: "info" 
            - name: DT_LOGCON_PROC
              value: "stdout"  
            - name: DT_LOGGING_DESTINATION
              value: "stdout"  
            - name: DT_LOGGING_NODEJS_FLAGS
              value: 'Propagator=true'  # Exporter=true,SpanProcessor=true,Propagator=true,Core=true
            - name: OTEL_COLLECTOR_NAME
              value: 'localhost'
            - name: OTEL_NODE_DISABLED_INSTRUMENTATIONS # https://github.com/open-telemetry/opentelemetry-js-contrib/blob/167dced09de0d2104561542b4f83047fa656505f/metapackages/auto-instrumentations-node/package.json#L51
              value: ''   # other examples - http,grpc,dns,net
            - name: NODE_OPTIONS
              value: '' # - do not instrument at all with things like '-r ./Instrumentation.js' Avoid duplicate spans from OA and Otel - https://opentelemetry.io/docs/zero-code/js/
            - name: PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT # This is used on the client-side for sending traces to the backend
              value: ''
            - name: NEXT_OTEL_VERBOSE
              value: '0'